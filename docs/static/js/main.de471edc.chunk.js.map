{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifts","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAiCeA,EA9BM,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEFC,mBAAU,IAFR,mBAE9BC,EAF8B,KAEnBC,EAFmB,KAcrC,OACK,0BAAMC,SAXK,SAACC,GACZA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACvBR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACvCN,EAAc,OAQd,uCACA,2BACKO,KAAK,OACLC,MAAOT,EACPU,SAAU,SAACP,GAAD,OAAKF,EAAcE,EAAEQ,OAAOF,Y,uBCvB7CG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,iDAEmCC,UAAUH,GAF7C,+DAICI,MAAOF,GAJR,cAIZG,EAJY,gBAKGA,EAAKC,OALR,uBAKXC,EALW,EAKXA,KAEDC,EAAMD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACtB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXzB,kBAcVM,GAdU,4CAAH,sDCYLO,EAVM,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEzB,OACK,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACnB,+BAAKA,KCoBLO,EAvBC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDL,SAAEA,GAAa,IAAD,EAEVd,mBAAS,CAC9BqB,KAAK,GACLa,SAAS,IAJsB,mBAE7BC,EAF6B,KAEtBC,EAFsB,KAsBpC,OAfAC,qBAAU,WACLxB,EAAQC,GACPwB,MAAK,SAAAC,GACDH,EAAS,CACJf,KAAKkB,EACLL,SAAS,SAKrB,CAACpB,IAKGqB,EDnBqBK,CAAa1B,GAA/Ba,EAFiB,EAEtBN,KAAaa,EAFS,EAETA,QAElB,OACK,oCACG,wBAAIJ,UAAU,qCAAsChB,GACnDoB,GAAW,uBAAGJ,UAAU,2BAAb,cAEZ,yBAAKA,UAAU,aAEPH,EAAOJ,KAAK,SAAAC,GAAG,OACd,kBAAC,EAAD,eACEiB,IAAKjB,EAAIC,IACLD,UEYbkB,EAzBO,WAAO,IAAD,EAEY1C,mBAAS,CAAC,WAFtB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KAKvB,OACK,oCACK,+CACA,kBAAC,EAAD,CACKA,cAAeA,IAEpB,6BAGK4C,EAAWpB,KAAI,SAAAT,GAAQ,OAClB,kBAAC,EAAD,CACK2B,IAAK3B,EACLA,SAAUA,SCfxC8B,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.de471edc.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types'; \r\n\r\n const AddCategory = ({setCategories}) => {\r\n\r\n     const [inputValue,setInputValue] = useState (''); \r\n\r\n     const Agregar = (e)=>{\r\n          e.preventDefault(); \r\n          if(inputValue.trim().length>2){\r\n               setCategories( cats => [ inputValue,...cats]);               \r\n               setInputValue('');\r\n          }\r\n          \r\n\r\n     }\r\n\r\n     return (\r\n          <form onSubmit={Agregar}>\r\n               <p>Buscar: </p>\r\n               <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={(e)=>setInputValue(e.target.value)}                 \r\n               />\r\n          </form>\r\n     )\r\n}\r\nAddCategory.propTypes={\r\n\r\n     setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory; ","export const getGifs = async (category) => {\r\n\r\n     const url= `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=15&api_key=ikIGPT5W9RQSyzbsrk9AcaOXgHvygB7y`;\r\n\r\n     const resp = await fetch (url); \r\n     const {data} = await resp.json(); \r\n\r\n     const gifts=data.map(img=> {\r\n          return {\r\n              id: img.id, \r\n              title: img.title,\r\n              url: img.images?.downsized_medium.url //images? pregunta  si vienen imagenes\r\n          }\r\n     });          \r\n      return gifts;      \r\n }; \r\n ","import React from 'react'\r\n\r\n const GifGridItem = ({title, url}) => {    \r\n\r\n     return (\r\n          <div className=\"animate__animated animate__bounce card\">\r\n              <img src={url} alt={title}/>\r\n               <p> {title}</p>\r\n          </div>\r\n     ); \r\n}\r\n\r\nexport default GifGridItem; ","import React from 'react'; \r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem  from './GifGridItem';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n   const {data:images, loading}= useFetchGifs(category); \r\n   \r\n     return (\r\n          <>          \r\n             <h3 className=\"animate__animated animate__fadeIn\" >{category}</h3> \r\n             {loading && <p className=\"animate__animated flash\">Loading...</p>}\r\n            \r\n             <div className=\"card-grid\">               \r\n               {\r\n                     images.map( img  =>(\r\n                      <GifGridItem                      \r\n                        key={img.id}\r\n                        {...img} \r\n                       />\r\n                     ))\r\n               }        \r\n               </div>          \r\n          </>         \r\n     )\r\n}\r\n\r\nexport default GifGrid ;","import { useState, useEffect } from \"react\"; \r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs =( category)=> {\r\n\r\n     const [state, setstate] = useState({\r\n          data:[], \r\n          loading: true\r\n     }); \r\n\r\n     useEffect(()=> {\r\n          getGifs(category)\r\n          .then(imgs=> {\r\n               setstate({\r\n                    data:imgs, \r\n                    loading: false\r\n               })  \r\n          }); \r\n          \r\n\r\n     }, [category]); \r\n\r\n\r\n      \r\n\r\n     return state; // {data:[], loading:true}\r\n}","// @flow \r\nimport React, {useState} from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\n const GifExpertApp = () => {\r\n\r\n     const [categories, setCategories]= useState(['cartas']); \r\n\r\n     \r\n     return (\r\n          <>\r\n               <h2>  GifExpertApp </h2>\r\n               <AddCategory                \r\n                    setCategories={setCategories} \r\n               />\r\n               <hr/>\r\n               \r\n               { \r\n                    categories.map(category =>(\r\n                         <GifGrid \r\n                              key={category}\r\n                              category={category}\r\n                         /> \r\n                    ))\r\n               }\r\n          \r\n          </>\r\n     );\r\n};\r\nexport default GifExpertApp; ","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  \n    <GifExpertApp /> ,\n  document.getElementById('root')\n);\n\n\n//GiftExpertApp\n//<h2>GifExpertApp</h2>\n//<hr/>"],"sourceRoot":""}